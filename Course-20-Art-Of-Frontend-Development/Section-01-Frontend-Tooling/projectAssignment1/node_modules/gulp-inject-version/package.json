{
  "_args": [
    [
      {
        "raw": "gulp-inject-version",
        "scope": null,
        "escapedName": "gulp-inject-version",
        "name": "gulp-inject-version",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/imanuel/repos/coursework-imanuelgittens/Course-20-Art-Of-Frontend-Development/Section-01-Frontend-Tooling/projectAssignment1"
    ]
  ],
  "_from": "gulp-inject-version@latest",
  "_id": "gulp-inject-version@1.0.1",
  "_inCache": true,
  "_location": "/gulp-inject-version",
  "_nodeVersion": "4.1.0",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/gulp-inject-version-1.0.1.tgz_1454447837832_0.4513080487959087"
  },
  "_npmUser": {
    "name": "jaaulde",
    "email": "auldridgej@gmail.com"
  },
  "_npmVersion": "2.14.4",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "isarray": "0.0.1",
    "string_decoder": "0.10.31",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "gulp-inject-version",
    "scope": null,
    "escapedName": "gulp-inject-version",
    "name": "gulp-inject-version",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-inject-version/-/gulp-inject-version-1.0.1.tgz",
  "_shasum": "d060db4bc5316d734a6a9e5662d6bda683b48d8a",
  "_shrinkwrap": null,
  "_spec": "gulp-inject-version",
  "_where": "/home/imanuel/repos/coursework-imanuelgittens/Course-20-Art-Of-Frontend-Development/Section-01-Frontend-Tooling/projectAssignment1",
  "author": {
    "name": "d'Vinci Interactive",
    "email": "developers@dvinci.com",
    "url": "http://www.dvinci.com/"
  },
  "bugs": {
    "url": "https://github.com/dvinciinteractive/gulp-inject-version/issues"
  },
  "dependencies": {
    "gulp-util": "^3.0.3",
    "through2": "^0.6.1"
  },
  "description": "Inject a package version into text based files",
  "devDependencies": {
    "gulp": "^3.8.8"
  },
  "directories": {},
  "dist": {
    "shasum": "d060db4bc5316d734a6a9e5662d6bda683b48d8a",
    "tarball": "https://registry.npmjs.org/gulp-inject-version/-/gulp-inject-version-1.0.1.tgz"
  },
  "engines": {
    "node": ">= 0.10"
  },
  "gitHead": "7b4c9d1d6a46b9d70b095f825330a29550e5d50c",
  "homepage": "https://github.com/dvinciinteractive/gulp-inject-version",
  "license": "Proprietary",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jaaulde",
      "email": "auldridgej@gmail.com"
    }
  ],
  "name": "gulp-inject-version",
  "optionalDependencies": {},
  "readme": "# gulp-inject-version\n\nGulp plugin for reading a version number out of a JSON file and injecting it into text based files.\n\nBy default, this plugin will read the `version` property from your project's `package.json`. It will then search the content of all files in the stream for the text `%%GULP_INJECT_VERSION%%` and replace that text with `vX.Y.Z` _(where `X.Y.Z` is the version number it read from `package.json`)_.\n\n## installation\n\n### [npm](https://www.npmjs.com)\n````bash\nnpm install gulp-inject-version\n````\n\n## usage\n````javascript\nvar injectVersion = require('gulp-inject-version');\n\ngulp.task('build', function () {\n    return gulp.src('src/index.html')\n        .pipe(injectVersion())\n        // whatever else you want to do to index.html...\n        .pipe(gulp.dest('dist'));\n});\n````\n\nIn this usage example, if `src/index.html` contained the html\n````html\n<div class=\"footer\">My Project %%GULP_INJECT_VERSION%%</div>\n````\nand the `version` property in your project's `package.json` was set to `'1.0.3'`, then after running you'd find that `dist/index.html` now contains the replacement text:\n````html\n<div class=\"footer\">My Project v1.0.3</div>\n````\n\n## options\nAn options object can be passed into the plugin like so:\n````javascript\nvar injectVersion = require('gulp-inject-version');\n\ngulp.task('build', function () {\n    return gulp.src('src/index.html')\n        .pipe(injectVersion({\n            package_file: 'bower.json',\n            // your other option overrides here\n        }))\n        // whatever else you want to do to index.html...\n        .pipe(gulp.dest('dist'));\n});\n````\n\nOption properties that you can override are:\n\nOption property|type|description|default value\n---------------|----|-----------|--------------\npackage_file     | string | The JSON containing file from which we should read the version                | 'package.json'\nversion_property | string | The name of the property that holds the version text within the JSON file     | 'version'\nprepend          | string | A string to prepend to the outputted version text                             | 'v'\nappend           | string | A string to append to the outputted version text                              | ''\nreplace          | string | The placeholder text to be replaced with the version text in the source files | '%%GULP_INJECT_VERSION%%'",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dvinciinteractive/gulp-inject-version.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.1"
}
